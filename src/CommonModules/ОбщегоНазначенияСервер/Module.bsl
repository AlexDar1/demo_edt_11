Функция ТаблицаЗначенийИзCSVФайла(ИмяФайла, Разделитель = ";", ЗаголовкиИзПервойСтроки = Ложь) Экспорт  
	
	//Чтение_Файла_CSV_ADO(Файл_CSV, Разделитель=";") ЭТА функция будет работать быстрее 
	//(пока не удалось настроить Microsoft Text Driver) 
	
	Текст = Новый ЧтениеТекста(ИмяФайла, КодировкаТекста.UTF8);
	СимволКавычки = Символ(34);
	Результат = Новый ТаблицаЗначений;
	ТекСтрока = Текст.ПрочитатьСтроку(); 
	
	Если ТекСтрока <> Неопределено Тогда
		
		МассивЗначений = СтрРазделить(ТекСтрока, Разделитель);
		ИндексКолонки = 0;
		
		Для Каждого ИмяКолонки Из МассивЗначений Цикл
			ИмяКолонки = ?(НЕ ЗаголовкиИзПервойСтроки, "Кол" + ИндексКолонки,
			УбратьЛишниеСимволы(ИмяКолонки));
			Результат.Колонки.Добавить(ИмяКолонки);
			ИндексКолонки = ИндексКолонки + 1;
		КонецЦикла; 
		
		Если ЗаголовкиИзПервойСтроки Тогда
			ТекСтрока = Текст.ПрочитатьСтроку();
		КонецЕсли;
		
	КонецЕсли;
	
	Пока ТекСтрока <> Неопределено Цикл 
		
		НоваяСтрока = Результат.Добавить();	
		МассивЗначений = СтрРазделить(ТекСтрока, Разделитель);
		ИндексКолонки = 0;
		
		Для Каждого ТекЗначение Из МассивЗначений Цикл
			
			Если ТипЗнч(ТекЗначение) = Тип("Строка") и СтрНачинаетсяС(ТекЗначение, СимволКавычки) 
				И СтрЗаканчиваетсяНа(ТекЗначение, СимволКавычки) тогда	
				НоваяСтрока[ИндексКолонки] = Сред(ТекЗначение, 2, СтрДлина(ТекЗначение) - 2);
			Иначе
				НоваяСтрока[ИндексКолонки] = ТекЗначение;
			КонецЕсли;
			
			ИндексКолонки = ИндексКолонки + 1;
		КонецЦикла;
		
		ТекСтрока = Текст.ПрочитатьСтроку();
	КонецЦикла;
	
	Возврат Результат; 
	
	
КонецФункции 

Процедура ЗагрузитьДокументыПрихода(ДвоичныеДанныеФайла) Экспорт  
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла(".csv"); 
	ДвоичныеДанныеФайла.Записать(ИмяВременногоФайла);
	РезультатЧтенияФайла = ТаблицаЗначенийИзCSVФайла(ИмяВременногоФайла, ",", Истина); 
	СоздатьДокументПриход(РезультатЧтенияФайла);	
	УдалитьФайлы(ИмяВременногоФайла); 
	
КонецПроцедуры

Процедура СоздатьДокументПриход(РезультатЧтенияФайла);

	Для Каждого Операция Из РезультатЧтенияФайла Цикл 
		НовыйДокПриход = Документы.Приход.СоздатьДокумент(); 
		НовыйДокПриход.Дата = ТекущаяДатаСеанса();
		НовыйДокПриход.ДатаПрибытия = ПолучитьДатуИзСтроки(Операция.Дата_Прибытие + Операция.Время_Прибытие);
		НовыйДокПриход.ДатаУбытия = ПолучитьДатуИзСтроки(Операция.Дата_Убытие + Операция.Время_Убытие);
		НовыйДокПриход.ТипГрузовогоМеста = Перечисления.ТипыГрузовогоМеста[Операция.КодТипаОбработки];
		НовыйДокПриход.НомерГрузовогоМеста = Операция.НомерГрузовогоМеста;
		НовыйДокПриход.НомерЗаказа = Операция.ЗаказКлиента;  
		НовыйДокПриход.КодХаба = Лев(Операция.ОтпСклМс, 4);
		НовыйДокПриход.Записать(РежимЗаписиДокумента.Проведение);
	КонецЦикла; 
	
КонецПроцедуры 

Функция ПолучитьДатуИзСтроки(ДатаСтрока) 
	
	ДатаСтрокаБезСпецСимволов = СтрСоединить(СтрРазделить(ДатаСтрока, "-/ :"), "");
	ДатаВФорматеДатаВремя = Дата(ДатаСтрокаБезСпецСимволов);
    Возврат ДатаВФорматеДатаВремя  
	
КонецФункции	

Функция Чтение_Файла_CSV_ADO(Файл_CSV, Разделитель=";") Экспорт

	Файл = Новый Файл(Файл_CSV);
	
    ПутьСоединения  = "Driver={Microsoft Text Driver (*.txt; *.csv)};";
    ПутьСоединения  = ПутьСоединения + "Dbq=" + Файл.Путь + ";";
    ПутьСоединения  = ПутьСоединения + "Uid=" + "Extensions=csv" + ";";

    ADO_Conn = Новый COMОбъект("ADODB.Connection");
    ADO_Conn.ConnectionString = ПутьСоединения;
    ADO_Conn.Open();

    ADO_Rec = Новый COMОбъект("ADODB.Recordset");
	ADO_Rec.Open("Select * from "+файл.ИмяБезРасширения + "#" + файл.Расширение, ADO_Conn);
		
		
	ТаблицаРезультат = Новый ТаблицаЗначений;
		
	// определим имена колонок
	Для НомерКолонки = 0 по ADO_Rec.Fields.Count-1 Цикл
		ТаблицаРезультат.Колонки.Добавить(ADO_Rec.Fields(НомерКолонки).Name);
	КонецЦикла;
		
 	Сч = 0;
   Пока ADO_Rec.EOF() = 0 Цикл

		Сч = Сч+1;
		
		НоваяСтрока = ТаблицаРезультат.Добавить();
		Для й = 0 по ADO_Rec.Fields.Count-1 Цикл
			НоваяСтрока[й] = ADO_Rec.Fields(й).Value;
		КонецЦикла;
        ADO_Rec.MoveNext();

    КонецЦикла;

	Возврат ТаблицаРезультат;   
	
КонецФункции 

Функция УбратьЛишниеСимволы(ИмяКолонки)
	
    СимволКавычки = Символ(34);
	СимволыНПП = Символы.НПП;
	
	ИмяКолонки = СтрЗаменить(ИмяКолонки, СимволКавычки, "");
	ИмяКолонки = СтрЗаменить(ИмяКолонки, " ", "_");
	ИмяКолонки = СтрЗаменить(ИмяКолонки, СимволыНПП, "_");
	ИмяКолонки = СтрЗаменить(ИмяКолонки, "/", "_");
	
	Возврат ИмяКолонки;
	
КонецФункции

Процедура ПересчитатьСтоимостьОбработки() Экспорт 
	
	ТекущаяДата = ТекущаяДатаСеанса();
	НачалоТекущегоМесяца = НачалоМесяца(ТекущаяДата);
	ПредыдущийМесяц = ДобавитьМесяц(ТекущаяДата,-1);
	НачалоПредыдущегоМесяща = НачалоМесяца(ПредыдущийМесяц);
	КонецПредыдущегоМесяща = КонецМесяца(ПредыдущийМесяц);
	
	НаборКонстант = Константы.СоздатьНабор("СтоимостьобработкиМГТ, СтоимостьобработкиШин, СтоимостьобработкиКГТ"); 
	НаборКонстант.Прочитать();
	СтоимостьобработкиМГТ = НаборКонстант.СтоимостьобработкиМГТ; 
	СтоимостьобработкиШин = НаборКонстант.СтоимостьобработкиШин;
	СтоимостьобработкиКГТ = НаборКонстант.СтоимостьобработкиКГТ; 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Приход.Ссылка) КАК КоличествоНаХабе
	|ИЗ
	|	Документ.Приход КАК Приход
	|ГДЕ
	|	(Приход.ДатаПрибытия МЕЖДУ &ДатаНачало И &ДатаКонец
	|			ИЛИ Приход.ДатаУбытия МЕЖДУ &ДатаНачало И &ДатаКонец)
	|	И Приход.Проведен";
	
	Запрос.УстановитьПараметр("ДатаНачало", НачалоПредыдущегоМесяща);
	Запрос.УстановитьПараметр("ДатаКонец", КонецПредыдущегоМесяща);
	
	РезультатЗапроса = Запрос.Выполнить();  
	
	Если РезультатЗапроса.Пустой() Тогда 
		СтоимостьОбработкиХаб = 500;
	Иначе
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		ВыборкаДетальныеЗаписи.Следующий();
		
		Если ВыборкаДетальныеЗаписи.КоличествоНаХабе < 500 Тогда 
			СтоимостьОбработкиХаб = 500;
		ИначеЕсли ВыборкаДетальныеЗаписи.КоличествоНаХабе < 1000 Тогда 
			СтоимостьОбработкиХаб = 200;
		ИначеЕсли ВыборкаДетальныеЗаписи.КоличествоНаХабе < 2000 Тогда 
			СтоимостьОбработкиХаб = 100;
		ИначеЕсли ВыборкаДетальныеЗаписи.КоличествоНаХабе < 5000 Тогда 
			СтоимостьОбработкиХаб = 70;
		Иначе
			СтоимостьОбработкиХаб = 50;
		КонецЕсли; 
		
	КонецЕсли;	
	
	НаборЗаписей = РегистрыСведений.ТарифыНаОбработку.СоздатьНаборЗаписей(); 
	НаборЗаписей.Отбор.Период.Установить(НачалоТекущегоМесяца);
	НаборЗаписей.Прочитать();
	
	Если НаборЗаписей.Количество() Тогда 
		ВызватьИсключение("В этом месяце уже были установлены тарифы на обработку");
	КонецЕсли;	
	
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период = НачалоТекущегоМесяца; 
	НоваяЗапись.ТипГрузовогоМеста = Перечисления.ТипыГрузовогоМеста.МГТ; 
	НоваяЗапись.Стоимость = СтоимостьобработкиМГТ; 
	
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период = НачалоТекущегоМесяца; 
	НоваяЗапись.ТипГрузовогоМеста = Перечисления.ТипыГрузовогоМеста.Шины; 
	НоваяЗапись.Стоимость = СтоимостьобработкиШин;
	
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период = НачалоТекущегоМесяца; 
	НоваяЗапись.ТипГрузовогоМеста = Перечисления.ТипыГрузовогоМеста.КГТ; 
	НоваяЗапись.Стоимость = СтоимостьобработкиКГТ; 
	
	НоваяЗапись = НаборЗаписей.Добавить(); 
	НоваяЗапись.Период = НачалоТекущегоМесяца; 
	НоваяЗапись.ТипГрузовогоМеста = Перечисления.ТипыГрузовогоМеста.Хаб; 
	НоваяЗапись.Стоимость = СтоимостьОбработкиХаб;
	
	НаборЗаписей.Записать(); 
	
КонецПроцедуры	
